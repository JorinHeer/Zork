package ch.bbw.na;import java.util.ArrayList;class Game {    boolean burning = false;    private Faces faces = new Faces();    private Attack attack = new Attack();    private boolean finished = false;    private Room lastRoom;    private Parser parser;    private Room currentRoom;    private Room lobby, nordstadt, mansion, guardian, china, shop, firegod, castle;    private Entities tyler, chinaman69, spider, guardianOTN, fireboss;    private Items Morellonomicon, cursedbow, key, stalkersblade;    private Player player;    private int potionsUsed=0;    public static final String ANSI_RESET = "\u001B[0m";    public static final String ANSI_BLACK = "\u001B[30m";    public static final String ANSI_RED = "\u001B[31m";    public static final String ANSI_GREEN = "\u001B[32m";    public static final String ANSI_YELLOW = "\u001B[33m";    public static final String ANSI_BLUE = "\u001B[34m";    public static final String ANSI_PURPLE = "\u001B[35m";    public static final String ANSI_CYAN = "\u001B[36m";    public static final String ANSI_WHITE = "\u001B[37m";    public Game() {        createPlayer();        createRooms();        createEntites();        createItems();        parser = new Parser();    }    private void createPlayer(){        player = new Player(100, true);        player.setMaxHP(player.getHp());    }    private void createEntites() {        tyler = new Entities(false, 100, 10);        chinaman69 = new Entities(false, 16000, 10000);        spider = new Entities(false, 10, 2);        guardianOTN = new Entities(false, 400, 15);        fireboss = new Entities(false, 1000, 150);    }    private void createItems() {        Morellonomicon = new Items(false, 12, 50);        cursedbow = new Items(false, 12, 50);        key = new Items(false, 12, 50);        stalkersblade = new Items(false,12, 50);    }    private void createRooms() {        // create the rooms        lobby = new Room("the Main-Lobby of the Game");        nordstadt = new Room("the Great City Nordstadt");        mansion = new Room("the great Mansion of Tyler1, T1 stares at you");        guardian = new Room("the Temple of the mighty Northguardian");        china = new Room("the Country of Chinaman69, the home of mr.Ping aka Winnie The Pooh");        shop = new Room("the worst shop of China, you may buy two healing potions");        firegod = new Room("the Hall of Doom. You approach the holy Firegod...");        castle = new Room("in a haunted castle, there are many spiders and the area is filled with the aura of a great Item");        // initialise room exits        lobby.setExits(nordstadt, china, null, null);        nordstadt.setExits(guardian, castle, lobby, mansion);        mansion.setExits(null, nordstadt, null, null);        guardian.setExits(null, null, nordstadt, null);        china.setExits(castle, firegod, shop, lobby);        shop.setExits(china, null, null, null);        firegod.setExits(null, null, null, china);        castle.setExits(null, null, china, nordstadt);        currentRoom = lobby;    }        public void play() {        printWelcome();        while (player.isAlive()) {            Command command = parser.getCommand();            processCommand(command);        }        System.out.println("Thank you for playing.  Good bye.");    }    private boolean fight(Entities entities, String name, int Enemydamage ,int hp, String text1, String text2){        boolean won = false;        finished = false;        System.out.println("Enemy's damage:"+entities.getDamage()+"\nEnemy's Health:"+entities.getEnemyHP());        while (!finished) {            Command command = parser.getCommand();            finished = processAttackCommand(command, player.getItems(), entities, text1, text2,  name) ;            if(!entities.isDead()){                if (burning){                    player.setHp(player.getHp()-9);                    System.out.println("you got burned and gained 9 dmg\nyour life is: "+player.getHp());                }                attackEnemy(Enemydamage);                System.out.println("You got hit by: "+name+"\n learn how to dodge noob\nYour Life is: "+ player.getHp());            }            else {                won = true;                finished = true;            }            if(player.getHp()<=0){                won = false;                finished = true;                player.setAlive(false);                System.out.println("You died noob bettter luck next time");            }        }        return won;    }    private void attackEnemy(int damage){        player.damage(damage);    }    private boolean processAttackCommand(Command command, ArrayList<Items> items, Entities entities, String text1, String text2, String enemyName) {        if (command.isUnknown()) {            System.out.println("I don't know what you mean...");            return false;        }        String commandWord = command.getCommandWord();        if (commandWord.equals("attack")){            attack(items, entities, text1, text2, enemyName);        }        else if (commandWord.equals("run")) {            System.out.println("you run away like an coward you will be ashamed for the rest of you life");            return true;        }        else if (commandWord.equals("help")) {            printHelp();        }        else {            System.out.println("you can't use this in a fight");        }        return false;    }    private void attack(ArrayList<Items> items, Entities entities, String text1, String text2, String enemyName){        entities.setEnemyHP(attack.attack(Morellonomicon.isIsequipped(),entities.getEnemyHP(), Morellonomicon.getCritChance(),Morellonomicon.getDamage(),                "Morellonomicon","burn your enemy with an spell"));        entities.setEnemyHP(attack.attack(cursedbow.isIsequipped(),entities.getEnemyHP(), cursedbow.getCritChance(),cursedbow.getDamage(),                "Cursed Bow","shoot the enemy with your bows"));        entities.setEnemyHP(attack.attack(stalkersblade.isIsequipped(),entities.getEnemyHP(), stalkersblade.getCritChance(),stalkersblade.getDamage(),                "Blade of Junglediff","show your enemy your dominance"));        if (items.isEmpty()) {            entities.setEnemyHP(entities.getEnemyHP()-1);            System.out.println("You have slapped him\nenemy's life:"+entities.getEnemyHP());        }        if(entities.getEnemyHP()<=0){            entities.setDead(true);            System.out.println("You Have defeated him Good job");        }        int random_int = (int) (Math.random() * (1000)+1);        if(random_int%2==1){            System.out.println(enemyName+": "+text1);        }        else {            System.out.println(enemyName+": "+text2);        }    }    private void printWelcome() {        System.out.println();        System.out.println("Welcome to Zork!");        System.out.println("Zork is a simple adventure game.\n Find all the items speak with the NPC and defeat the Bosses");        System.out.println("Type 'help' if you need help.");        System.out.println("");        System.out.println(currentRoom.longDescription());    }    private boolean processCommand(Command command) {        if (command.isUnknown()) {            System.out.println("I don't know what you mean...");            return false;        }        String commandWord = command.getCommandWord();        if (commandWord.equals("help")) {            printHelp();        } else if (commandWord.equals("attack")) {            //if(currentRoom = )            printAttack();        } else if (commandWord.equals("back")) {            back();        } else if (commandWord.equals("speak")) {            printSpeak();        } else if (commandWord.equals("pickup")) {            printPickup();        } else if (commandWord.equals("go")) {            goRoom(command);        } else if (commandWord.equals("map")) {            printMap();        }else if (commandWord.equals("unlock")){            unlock();        }        else if (commandWord.equals("quit")) {            if (command.hasSecondWord()) {                System.out.println("Quit what?");            } else {                System.out.println("You commit Seppuku and die with great pain"); // signal that we want to quit                player.setAlive(false);            }        }        if (burning){            player.setHp(player.getHp()-9);            System.out.println("you got burned and gained 9 dmg\nyour life is: "+player.getHp());        }        return false;    }    private void unlock(){        if(currentRoom == firegod&& key.isIsequipped()){            if(!fireboss.isDead()){                burning = true;                System.out.println("Hast du einmal einen guten Tag,\n" +                        "Der Vesi das zu ändern vermag\n" +                        "\n" +                        "Vergisst du deinen Rechner in die Mathe,\n" +                        "holt sich Veselkopp einen Latte,\n" +                        "Das findet der vesi\n" +                        "nicht sehr lässi und versteht kein Spässi\n" +                        "\"Musst du schauen, eine Sache!\",¨\n" +                        "sagt er mit der Esel-Lache\n" +                        "\"Für den vergessenen Rechner gibts sogleich,\n" +                        "eine Stunde Arbeitsausgleich!\"\n" +                        "\n" +                        "Und für das begehen von einem Kapitalverbrechen\n" +                        "Geht man eine Stunde Lindenblätter rechen\n" +                        "type fight to start the epic battle");                if (fight(fireboss, "Veselcop", fireboss.getDamage(), fireboss.getEnemyHP(), "hasch te deine hausaufgaben gemacht und E mail gelese", "noch so einer und es gibt eine stunde Wiedergutmachung")){                    System.out.println("you have defeated the pure evil and now commit Seppuku because you have seen too much and want to die\n you died like a depressed hero\n" +                            "congratulation the game now ends");                    player.setAlive(false);                }            }        }        else if (currentRoom == firegod) {            System.out.println("you need a key to open the gate to hell");        }        else if (key.isIsequipped()){            System.out.println("You reach for the key but the key is too cold and freezes your hand\nyou gained 12 damage\nyour life is:"+(player.getHp()-12));            player.setHp(player.getHp()-12);        }    }    private void printHelp() {        System.out.println("You are lost. You are alone. You wander");        System.out.println("A mysterious voice speaks up..");        System.out.println();        System.out.println("Your command words are:");        System.out.println(parser.showCommands());        System.out.println("if you are in a fight make sure you do a valid command because you arent allowed to make mistakes in a fight");        System.out.println("and running is for cowards and noobs so eat the damage like a man");    }    private void printMap() {        if (currentRoom==lobby) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt--- Castle\n" +                            "         	              |           |\n" +                            "                        "+ANSI_RED+"Lobby"+ ANSI_RESET+"--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==shop) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     "+ANSI_RED+"Shop"+ ANSI_RESET+"\n\n");        }        if (currentRoom==china) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------"+ANSI_RED+"China"+ ANSI_RESET+"------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==firegod) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------"+ANSI_RED+"gate to hell"+ ANSI_RESET+"\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==castle) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt---"+ANSI_RED+"Haunted Castle"+ ANSI_RESET+"\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==nordstadt) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " Tylers Mansion-------"+ANSI_RED+"Nordstadt"+ ANSI_RESET+"---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==mansion) {            System.out.println(                    "               guardian of the North \n" +                            "                          |\n" +                            " "+ANSI_RED+"Tylers Mansion"+ ANSI_RESET+"-------Nordstadt---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }        if (currentRoom==guardian) {            System.out.println(                    "               "+ANSI_RED+"guardian of the North"+ ANSI_RESET+" \n" +                            "                          |\n" +                            " Tylers Mansion-------Nordstadt---Haunted Castle\n" +                            "         	              |           |\n" +                            "                        Lobby--------China------gate to hell\n" +                            "                                      |\n" +                            "                                     Shop\n\n");        }    }    private void printSpeak() {            if (currentRoom == mansion && cursedbow.isIsequipped()&& Morellonomicon.isIsequipped()){                if(!tyler.isDead()){                    faces.T1pre();                    System.out.println("T1: *screams* I MAY TOOK A BIT TOO MUCH BLOODRUSH\nT1: *looks at you angry* YOU SHALL NOT GET THE HOLY SWORD OF JGL DIFF\nT1: *pouts* FIGHT ME");                    tylorfight();                }            }            else if(currentRoom == mansion){                System.out.println("OMG YOU'RE NOT ALPHA AS FUCK YET GO FARM YOU BRONZE");            }            else if (currentRoom == guardian && cursedbow.isIsequipped()&& Morellonomicon.isIsequipped()&& stalkersblade.isIsequipped()){                guardianfight();            }            else if(currentRoom == guardian){                System.out.println("the guardian is just standing there just menacing and doesn't even look at you\n go back and try to defeat Tyler and find all the items");            }        else if (currentRoom == china){			if (!Morellonomicon.isIsequipped()){				System.out.println("Konichiwa\nTake this shit book\n*you have been granted Morellonomicon*");				Morellonomicon.setIsequipped(true);			}			else{				System.out.println("Scam noises Xue Hue cha piao piao");			}		}            else if (currentRoom==shop&&potionsUsed<3 && player.getHp() == player.getMaxHP()){                System.out.println("he gives you a second potion and you immediately drink it because you are stupid, this potion was completely useless");                potionsUsed++;            }        else if(currentRoom == shop&&potionsUsed<3){                System.out.println("welcome to the worst shop in the game\n" +                        "I give you a potion if you leave me alone");                        potionsUsed++;                        player.setHp(player.getMaxHP());                System.out.println("you drank the potion immediately and healed yourself completely");                System.out.println("your life is at:"+player.getHp());            }        else if(currentRoom == shop){                System.out.println("i already gave you 2 potions pls go home and find some friends im already broke");            }        else {            System.out.println("Silence\n" +                    "A godly voice whispers\n" +                    "You're lost, there's no soul around you...");        }    }    private void guardianfight() {        if(!guardianOTN.isDead()){            System.out.println("guardian: *looks at you and shouts* you may not pass \nguardian: *stand up slowly and shouts* FIGHT ME\n type attack to start the fight");            if (fight(guardianOTN, "Guardian", guardianOTN.getDamage(), guardianOTN.getEnemyHP(), "guardian: This is but a scratch", "guardian: was that a fly?")) {                System.out.println("That is not possible\n" +                        "restarting...\n" +                        "restart failed\n" +                        "screw you \n" +                        "*You have been granted the key to unlock the gate to the simp queen*");                guardianOTN.setDead(true);                key.setIsequipped(true);                System.out.println("you have gained the blessing of the guardian all your weapons get buffed to the sky and your max hp is 1000");                player.setMaxHP(1000);                stalkersblade.setDamage(42);                cursedbow.setDamage(32);                Morellonomicon.setDamage(32);            }            else {                System.out.println("Noob go bury yourself or commit suicide losers dont have the right to live");            }        }    }    private void printPickup() {        if (currentRoom == castle) {            if (!spider.isDead()) {                System.out.println("A spider Attacks you as you grap an fancy Bow\n" +                        "type attack to start the fight");                if (fight(spider, "Spider", spider.getDamage(), spider.getEnemyHP(), "damn you", "why the fuck can i speak")) {                    //fight();                    System.out.println("Your body screams..\n" +                            "Your Veins are filled with an ancient power\n" +                            "its spooky time\n" +                            "*You have been granted cursed Bow*");                    spider.setDead(true);                    cursedbow.setIsequipped(true);                }                else {                    System.out.println("you lost aganist a spider noob");                }            }            else if (!cursedbow.isIsequipped()){                System.out.println("Your body screams..\n" +                        "Your Veins are filled with an ancient power\n" +                        "its spooky time\n" +                        "*You have been granted cursed Bow*");                cursedbow.setIsequipped(true);            }            else{                System.out.println("You already picked up this item");            }        }        else{        	System.out.println("You pick up dirt\n" +					"What is wrong with you?");		}    }    private void printAttack() {        if(currentRoom == china&& !chinaman69.isDead()) {            System.out.println("Chinaman69 has been challenged\n" +                    "Chinaman69 is angry\n" +                    "type attack to start the fight");            fight(chinaman69, "Mr. Ping", chinaman69.getDamage(), chinaman69.getEnemyHP(), "you fuck", "yes");        }        if(currentRoom == castle && !spider.isDead()){            System.out.println("You attack the spider");            if (fight(spider, "Spider", spider.getDamage(), spider.getEnemyHP(), "damn you", "why the fuck can i speak")) {                //fight();                spider.setDead(true);            }            else {                System.out.println("you lost aganist a spider noob");            }        }        else if (currentRoom == mansion && cursedbow.isIsequipped()&& Morellonomicon.isIsequipped()){            if(!tyler.isDead()){                faces.T1pre();                System.out.println("T1: *screams* I MAY TOOK A BIT TOO MUCH BLOODRUSH\nT1: *looks at you angry* YOU SHALL NOT GET THE HOLY SWORD OF JGL DIFF\nT1: *pouts* FIGHT ME\n type attack to start the fight");                tylorfight();            }        }        else if(currentRoom == mansion){            System.out.println("OMG YOU'RE NOT ALPHA AF YET GO FARM YOU BRONZE");        }        else if (currentRoom == guardian && cursedbow.isIsequipped()&& Morellonomicon.isIsequipped()&& stalkersblade.isIsequipped()){            guardianfight();        }        else if(currentRoom == guardian){            System.out.println("the guardian is just standing there just menacing and doesn't even look at you\n go back and try to defeat Tyler and find all the items");        }        else {            player.damage(10);            System.out.println("What is wrong with you?" +                    "\nYou punch in the air and hurt your self in your confusion" +                    "\nYou have gained 10 damage" +                    "\nYour life is:"+player.getHp());        }    }    private void tylorfight() {        if (fight(tyler, "T1", tyler.getDamage(), tyler.getEnemyHP(), "SCHRAUBEN SIE SIE WEIBCHEN", "OKAY, SECOND TIME I'VE BEEN CALLED A BITCH")) {            faces.T1After();            System.out.println("IMPOSSIBLE\n" +                    "YOU SHIT\n" +                    "HACKER\n" +                    " \n" +                    "*You have been granted Blade Of Junglediff*");            tyler.setDead(true);            stalkersblade.setIsequipped(true);        }        else {            System.out.println("you lost against T1 BRONZE");        }    }    private void back() {        System.out.println("You go back to your last room");        Room nextRoom = lastRoom;        if (nextRoom == null)            System.out.println("There is no door!");        else {            lastRoom = currentRoom;            currentRoom = nextRoom;            System.out.println(currentRoom.longDescription());        }    }    private void goRoom(Command command) {        if (!command.hasSecondWord()) {            System.out.println("Go where?");        } else {            String direction = command.getSecondWord();            Room nextRoom = currentRoom.nextRoom(direction);            if (nextRoom == null)                System.out.println("There is no door!");            else {                lastRoom = currentRoom;                currentRoom = nextRoom;                System.out.println(currentRoom.longDescription());            }        }    }}